<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tuna.gomen.mapper.TeamRecruitBoardMapper">

    <resultMap id="TeamRecruitWithApplicantsResultMap"
               type="com.tuna.gomen.teamRecruitBoard.dto.TeamRecruitWithApplicantsDTO">
        <id property="teamPostId" column="team_post_id"/>
        <result property="postTitle" column="post_title"/>
        <result property="teamName" column="team_name"/>
        <result property="teamIntroduce" column="team_introduce"/>
        <result property="createdAt" column="created_at"/>
        <result property="modifiedAt" column="modified_at"/>
        <result property="isDeleted" column="is_deleted"/>
        <result property="isCompleted" column="is_completed"/>
        <result property="leaderNickname" column="leaderNickname" jdbcType="VARCHAR" />
        <collection property="applicants" ofType="com.tuna.gomen.applicant.dto.ApplicantDTO">
            <result property="userId" column="user_id"/>
            <result property="nickname" column="applicantNickname"/>
            <result property="introduce" column="introduce"/>
            <result property="isProcessed" column="is_processed"/>
        </collection>
    </resultMap>

<!--    &lt;!&ndash; 팀 모집 게시글과 지원자 목록을 포함한 DTO &ndash;&gt;-->
<!--    <select id="findTeamRecruitWithApplicants" resultMap="TeamRecruitWithApplicantsResultMap">-->
<!--        SELECT-->
<!--        tr.team_post_id,-->
<!--        tr.post_title,-->
<!--        tr.team_name,-->
<!--        tr.team_introduce,-->
<!--        tr.created_at,-->
<!--        tr.modified_at,-->
<!--        tr.is_deleted,-->
<!--        tr.is_completed,-->
<!--        u.nickname AS leaderNickname,-->
<!--        &#45;&#45; 지원자 정보-->
<!--        a.user_id AS user_id,-->
<!--        ua.nickname AS applicantNickname,  &lt;!&ndash; 지원자의 nickname &ndash;&gt;-->
<!--        a.introduce,-->
<!--        a.is_processed-->
<!--        FROM tbl_team_recruit tr-->
<!--        LEFT JOIN tbl_user u ON tr.leader_id = u.user_id-->
<!--        LEFT JOIN tbl_applicant a ON tr.team_post_id = a.team_post_id-->
<!--        LEFT JOIN tbl_user ua ON a.user_id = ua.user_id-->
<!--        WHERE tr.is_deleted = 'N'-->
<!--        AND tr.team_post_id = #{teamPostId} &lt;!&ndash; teamPostId를 추가 &ndash;&gt;-->
<!--        ORDER BY tr.created_at DESC-->
<!--    </select>-->

    <!-- 내가 지원한 팀 모집 게시글 조회 -->
<!--    http://localhost:8080/gomen/team-recruit/my-applications/30-->
    <select id="findMyApplications" resultMap="TeamRecruitWithApplicantsResultMap">
        SELECT
        tr.team_post_id,
        tr.post_title,
        tr.team_name,
        tr.team_introduce,
        tr.created_at,
        tr.modified_at,
        tr.is_deleted,
        tr.is_completed,
        u.nickname AS leaderNickname,
        a.user_id,
        ua.nickname AS applicantNickname,  <!-- 지원자의 nickname을 가져오기 위한 조인 -->
        a.introduce,
        a.is_processed
        FROM tbl_team_recruit tr
        LEFT JOIN tbl_user u ON tr.leader_id = u.user_id
        LEFT JOIN tbl_applicant a ON tr.team_post_id = a.team_post_id
        LEFT JOIN tbl_user ua ON a.user_id = ua.user_id  <!-- 지원자의 nickname을 가져오기 위한 조인 -->
        WHERE a.user_id = #{userId}
        AND tr.is_deleted = 'N'
        ORDER BY tr.created_at DESC
    </select>

    <!-- 팀 모집 게시글 전체 목록 조회 (삭제되지 않은 게시글만) -->
<!--    http://localhost:8080/gomen/team-recruit/all-active-posts-->
    <select id="findAllTeamRecruitPosts" resultMap="TeamRecruitWithApplicantsResultMap">
        SELECT
            tr.team_post_id,
            tr.post_title,
            tr.team_name,
            tr.team_introduce,
            tr.created_at,
            tr.modified_at,
            tr.is_deleted,
            tr.is_completed,
            u.nickname AS leaderNickname
        FROM tbl_team_recruit tr
                 LEFT JOIN tbl_user u ON tr.leader_id = u.user_id
        WHERE tr.is_deleted = 'N'
        ORDER BY tr.created_at DESC
    </select>

    <!-- 팀 모집 게시글 상세 조회 (null값에 대한 것 추후에 수정 필요할 수도)-->
<!--    http://localhost:8080/gomen/team-recruit/details/1-->
    <select id="findTeamRecruitPostDetails" resultMap="TeamRecruitWithApplicantsResultMap">
        SELECT
        tr.team_post_id,
        tr.post_title,
        tr.team_name,
        tr.team_introduce,
        tr.created_at,
        tr.modified_at,
        tr.is_deleted,
        tr.is_completed,
        u.nickname AS leaderNickname,
        a.user_id,
        ua.nickname AS applicantNickname,  <!-- 지원자의 nickname을 가져오기 위한 조인 -->
        a.introduce,
        a.is_processed
        FROM tbl_team_recruit tr
        LEFT JOIN tbl_user u ON tr.leader_id = u.user_id
        LEFT JOIN tbl_applicant a ON tr.team_post_id = a.team_post_id
        LEFT JOIN tbl_user ua ON a.user_id = ua.user_id  <!-- 지원자의 nickname을 가져오기 위한 조인 -->
        WHERE tr.team_post_id = #{teamPostId}
        AND tr.is_deleted = 'N';
    </select>



<!--    &lt;!&ndash; 내가 지원한 팀 목록에서 수락 여부만 확인 &ndash;&gt;-->
<!--    <select id="findMyApplicationsWithStatus" resultType="com.tuna.gomen.applicant.dto.ApplicantDTO">-->
<!--        SELECT-->
<!--            a.user_id,-->
<!--            u.nickname,-->
<!--            a.introduce,-->
<!--            a.is_processed-->
<!--        FROM tbl_applicant a-->
<!--                 JOIN tbl_user u ON a.user_id = u.user_id-->
<!--        WHERE a.user_id = #{userId}-->
<!--          AND a.is_processed IN ('N', 'Y')-->
<!--    </select>-->

    <!-- 완료된 팀 모집 게시글 목록 -->
    <!--http://localhost:8080/gomen/team-recruit/completed-posts-->
    <select id="findCompletedPosts" resultMap="TeamRecruitWithApplicantsResultMap">
        SELECT
            tr.team_post_id,
            tr.post_title,
            tr.team_name,
            tr.team_introduce,
            tr.created_at,
            tr.modified_at,
            tr.is_deleted,
            tr.is_completed,
            u.nickname AS leaderNickname
        FROM tbl_team_recruit tr
                 LEFT JOIN tbl_user u ON tr.leader_id = u.user_id
        WHERE tr.is_completed = 'Y'
          AND tr.is_deleted = 'N'
        ORDER BY tr.created_at DESC
    </select>

    <!-- 활성 상태의 팀 모집 게시글 목록 조회 -->
<!--    http://localhost:8080/gomen/team-recruit/active-posts-->
    <select id="findActivePosts" resultMap="TeamRecruitWithApplicantsResultMap">
        SELECT
            tr.team_post_id,
            tr.post_title,
            tr.team_name,
            tr.team_introduce,
            tr.created_at,
            tr.modified_at,
            tr.is_deleted,
            tr.is_completed,
            u.nickname AS leaderNickname
        FROM tbl_team_recruit tr
                 LEFT JOIN tbl_user u ON tr.leader_id = u.user_id
        WHERE tr.is_completed = 'N'
          AND tr.is_deleted = 'N'
        ORDER BY tr.created_at DESC
    </select>

    <!-- 내가 지원한 팀 모집 게시글 처리상태와 함께 조회 -->
<!--    http://localhost:8080/gomen/team-recruit/my-applications/details/37-->
    <select id="findMyApplicationsWithDetails" resultMap="TeamRecruitWithApplicantsResultMap">
        SELECT
            tr.team_post_id,
            tr.post_title,
            tr.team_name,
            tr.team_introduce,
            tr.created_at,
            tr.modified_at,
            tr.is_deleted,
            tr.is_completed,
            u.nickname AS leaderNickname
        FROM tbl_team_recruit tr
                 LEFT JOIN tbl_user u ON tr.leader_id = u.user_id
                 LEFT JOIN tbl_applicant a ON tr.team_post_id = a.team_post_id  -- JOIN에서는 조건 제외
        WHERE tr.is_deleted = 'N'
          AND a.user_id = #{userId}  -- WHERE에서 필터링
        ORDER BY tr.created_at DESC
    </select>

</mapper>
